# Generated by Django 5.2.6 on 2025-09-21 04:47

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('library', '0006_author_created_by_author_updated_by_book_created_by_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_default', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tracker_collections',
            },
        ),
        migrations.CreateModel(
            name='CollectionBook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('personal_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('personal_notes', models.TextField(blank=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.collection')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('edition', models.ForeignKey(blank=True, help_text='Specific edition in this collection', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.edition')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tracker_collection_books',
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='books',
            field=models.ManyToManyField(related_name='collections', through='tracker.CollectionBook', to='library.book'),
        ),
        migrations.CreateModel(
            name='ReadingGoal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('goal_type', models.CharField(choices=[('books_per_year', 'Books per Year'), ('pages_per_day', 'Pages per Day'), ('minutes_per_day', 'Minutes per Day')], max_length=20)),
                ('target_value', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('current_value', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('year', models.PositiveIntegerField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tracker_reading_goals',
            },
        ),
        migrations.CreateModel(
            name='ReadingProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('current_page', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('total_pages_read', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('reading_status', models.CharField(choices=[('not_started', 'Not Started'), ('reading', 'Reading'), ('completed', 'Completed'), ('paused', 'Paused'), ('dropped', 'Dropped')], default='not_started', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_read_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('estimated_time_remaining', models.PositiveIntegerField(blank=True, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_progress', to='library.book')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('edition', models.ForeignKey(help_text='Specific edition being read', on_delete=django.db.models.deletion.CASCADE, related_name='reading_progress', to='library.edition')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tracker_reading_progress',
            },
        ),
        migrations.CreateModel(
            name='ReadingSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('start_page', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('end_page', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('device_info', models.CharField(blank=True, max_length=200)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_sessions', to='library.book')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('edition', models.ForeignKey(help_text='Specific edition being read', on_delete=django.db.models.deletion.CASCADE, related_name='reading_sessions', to='library.edition')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tracker_reading_sessions',
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('page_number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='library.book')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('edition', models.ForeignKey(help_text='Specific edition this bookmark refers to', on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='library.edition')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tracker_bookmarks',
                'indexes': [models.Index(fields=['created_by', 'book'], name='tracker_boo_created_bac63c_idx'), models.Index(fields=['created_by', 'edition'], name='tracker_boo_created_8e5400_idx'), models.Index(fields=['book', 'page_number'], name='tracker_boo_book_id_36f5c8_idx'), models.Index(fields=['edition', 'page_number'], name='tracker_boo_edition_996c4a_idx')],
                'unique_together': {('created_by', 'book', 'edition', 'page_number')},
            },
        ),
        migrations.AddIndex(
            model_name='collectionbook',
            index=models.Index(fields=['collection'], name='tracker_col_collect_2d3628_idx'),
        ),
        migrations.AddIndex(
            model_name='collectionbook',
            index=models.Index(fields=['book'], name='tracker_col_book_id_4df01d_idx'),
        ),
        migrations.AddIndex(
            model_name='collectionbook',
            index=models.Index(fields=['edition'], name='tracker_col_edition_51ef20_idx'),
        ),
        migrations.AddIndex(
            model_name='collectionbook',
            index=models.Index(fields=['created_at'], name='tracker_col_created_d63d95_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='collectionbook',
            unique_together={('collection', 'book', 'edition')},
        ),
        migrations.AddIndex(
            model_name='collection',
            index=models.Index(fields=['created_by'], name='tracker_col_created_653360_idx'),
        ),
        migrations.AddIndex(
            model_name='collection',
            index=models.Index(fields=['created_by', 'is_default'], name='tracker_col_created_39ec9c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='collection',
            unique_together={('created_by', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='readinggoal',
            unique_together={('created_by', 'goal_type', 'year')},
        ),
        migrations.AddIndex(
            model_name='readingprogress',
            index=models.Index(fields=['created_by'], name='tracker_rea_created_fe3203_idx'),
        ),
        migrations.AddIndex(
            model_name='readingprogress',
            index=models.Index(fields=['book'], name='tracker_rea_book_id_aebce4_idx'),
        ),
        migrations.AddIndex(
            model_name='readingprogress',
            index=models.Index(fields=['edition'], name='tracker_rea_edition_3b8ffe_idx'),
        ),
        migrations.AddIndex(
            model_name='readingprogress',
            index=models.Index(fields=['created_by', 'book'], name='tracker_rea_created_70a324_idx'),
        ),
        migrations.AddIndex(
            model_name='readingprogress',
            index=models.Index(fields=['created_by', 'edition'], name='tracker_rea_created_523fbb_idx'),
        ),
        migrations.AddIndex(
            model_name='readingprogress',
            index=models.Index(fields=['reading_status'], name='tracker_rea_reading_6b0d37_idx'),
        ),
        migrations.AddIndex(
            model_name='readingprogress',
            index=models.Index(fields=['last_read_at'], name='tracker_rea_last_re_7cde4b_idx'),
        ),
        migrations.AddIndex(
            model_name='readingprogress',
            index=models.Index(fields=['progress_percentage'], name='tracker_rea_progres_23ee22_idx'),
        ),
        migrations.AddConstraint(
            model_name='readingprogress',
            constraint=models.CheckConstraint(condition=models.Q(('completed_at__gte', models.F('started_at')), ('completed_at__isnull', True), _connector='OR'), name='completed_at_gte_started_at'),
        ),
        migrations.AlterUniqueTogether(
            name='readingprogress',
            unique_together={('created_by', 'book', 'edition')},
        ),
        migrations.AddIndex(
            model_name='readingsession',
            index=models.Index(fields=['created_by'], name='tracker_rea_created_de1a55_idx'),
        ),
        migrations.AddIndex(
            model_name='readingsession',
            index=models.Index(fields=['book'], name='tracker_rea_book_id_c910e4_idx'),
        ),
        migrations.AddIndex(
            model_name='readingsession',
            index=models.Index(fields=['edition'], name='tracker_rea_edition_46cb66_idx'),
        ),
        migrations.AddIndex(
            model_name='readingsession',
            index=models.Index(fields=['start_time'], name='tracker_rea_start_t_f7425a_idx'),
        ),
        migrations.AddIndex(
            model_name='readingsession',
            index=models.Index(fields=['created_by', 'book', 'start_time'], name='tracker_rea_created_641413_idx'),
        ),
        migrations.AddIndex(
            model_name='readingsession',
            index=models.Index(fields=['created_by', 'edition', 'start_time'], name='tracker_rea_created_411027_idx'),
        ),
        migrations.AddConstraint(
            model_name='readingsession',
            constraint=models.CheckConstraint(condition=models.Q(('end_page__gte', models.F('start_page'))), name='end_page_gte_start_page'),
        ),
        migrations.AddConstraint(
            model_name='readingsession',
            constraint=models.CheckConstraint(condition=models.Q(('end_time__gte', models.F('start_time')), ('end_time__isnull', True), _connector='OR'), name='end_time_gte_start_time'),
        ),
    ]
