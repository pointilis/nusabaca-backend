# Generated by Django 5.2.6 on 2025-09-21 04:11

import apps.library.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('library', '0003_book_isbn_book_isbn13'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cover',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('cover_type', models.CharField(choices=[('front', 'Front Cover'), ('back', 'Back Cover'), ('spine', 'Spine'), ('dust_jacket', 'Dust Jacket'), ('thumbnail', 'Thumbnail'), ('high_res', 'High Resolution')], default='front', max_length=20)),
                ('title', models.CharField(help_text='Descriptive title for this cover', max_length=255)),
                ('description', models.TextField(blank=True)),
                ('image_file', models.ImageField(blank=True, help_text='Upload cover image file directly', null=True, upload_to=apps.library.models.cover_upload_path)),
                ('image_url', models.URLField(blank=True, help_text='URL to external cover image')),
                ('file_format', models.CharField(blank=True, choices=[('JPEG', 'JPEG'), ('PNG', 'PNG'), ('WEBP', 'WebP'), ('SVG', 'SVG'), ('GIF', 'GIF')], max_length=10)),
                ('file_size_kb', models.PositiveIntegerField(blank=True, help_text='File size in kilobytes', null=True)),
                ('width', models.PositiveIntegerField(blank=True, help_text='Image width in pixels', null=True)),
                ('height', models.PositiveIntegerField(blank=True, help_text='Image height in pixels', null=True)),
                ('photographer', models.CharField(blank=True, help_text='Cover photographer/designer', max_length=255)),
                ('copyright_info', models.TextField(blank=True, help_text='Copyright information')),
                ('is_primary', models.BooleanField(default=False, help_text='Primary cover to display')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this cover is active/visible')),
                ('quality_rating', models.PositiveSmallIntegerField(blank=True, help_text='Quality rating 1-5 (5 being highest)', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('source', models.CharField(blank=True, help_text='Source of the cover image', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'db_table': 'library_covers',
            },
        ),
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('edition_title', models.CharField(blank=True, help_text='Edition-specific title if different', max_length=500)),
                ('edition_number', models.CharField(blank=True, help_text="e.g., '2nd Edition', 'Revised'", max_length=50)),
                ('edition_type', models.CharField(choices=[('first', 'First Edition'), ('revised', 'Revised Edition'), ('reprint', 'Reprint'), ('anniversary', 'Anniversary Edition'), ('special', 'Special Edition'), ('international', 'International Edition'), ('translation', 'Translation'), ('abridged', 'Abridged Edition'), ('unabridged', 'Unabridged Edition'), ('illustrated', 'Illustrated Edition'), ('other', 'Other')], default='other', max_length=20)),
                ('isbn', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('isbn13', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('edition_language', models.CharField(blank=True, help_text='Language of this edition', max_length=10)),
                ('total_pages', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('file_path', models.CharField(blank=True, max_length=1000)),
                ('file_format', models.CharField(blank=True, choices=[('PDF', 'PDF'), ('EPUB', 'EPUB'), ('MOBI', 'MOBI'), ('TXT', 'Text'), ('HTML', 'HTML'), ('AUDIOBOOK', 'Audiobook'), ('HARDCOVER', 'Hardcover'), ('PAPERBACK', 'Paperback')], max_length=20)),
                ('file_size_mb', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=False, help_text='Primary edition to display for this book')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, help_text='Edition-specific notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editions', to='library.book')),
                ('editor', models.ManyToManyField(blank=True, related_name='edited_editions', to='library.author')),
                ('illustrator', models.ManyToManyField(blank=True, related_name='illustrated_editions', to='library.author')),
                ('translator', models.ManyToManyField(blank=True, related_name='translated_editions', to='library.author')),
            ],
            options={
                'db_table': 'library_editions',
            },
        ),
        migrations.DeleteModel(
            name='BookEdition',
        ),
        migrations.AddIndex(
            model_name='cover',
            index=models.Index(fields=['content_type', 'object_id'], name='library_cov_content_021b04_idx'),
        ),
        migrations.AddIndex(
            model_name='cover',
            index=models.Index(fields=['cover_type'], name='library_cov_cover_t_f1153f_idx'),
        ),
        migrations.AddIndex(
            model_name='cover',
            index=models.Index(condition=models.Q(('is_primary', True)), fields=['is_primary'], name='primary_covers_idx'),
        ),
        migrations.AddIndex(
            model_name='cover',
            index=models.Index(condition=models.Q(('is_active', True)), fields=['is_active'], name='active_covers_idx'),
        ),
        migrations.AddIndex(
            model_name='cover',
            index=models.Index(fields=['file_format'], name='library_cov_file_fo_22a617_idx'),
        ),
        migrations.AddIndex(
            model_name='cover',
            index=models.Index(fields=['quality_rating'], name='library_cov_quality_2d95bc_idx'),
        ),
        migrations.AddConstraint(
            model_name='cover',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('content_type', 'object_id', 'cover_type'), name='one_primary_cover_per_type'),
        ),
        migrations.AlterUniqueTogether(
            name='cover',
            unique_together={('content_type', 'object_id', 'cover_type', 'is_primary')},
        ),
        migrations.AddIndex(
            model_name='edition',
            index=models.Index(fields=['book'], name='library_edi_book_id_6e6c49_idx'),
        ),
        migrations.AddIndex(
            model_name='edition',
            index=models.Index(fields=['isbn'], name='library_edi_isbn_02d2bc_idx'),
        ),
        migrations.AddIndex(
            model_name='edition',
            index=models.Index(fields=['isbn13'], name='library_edi_isbn13_d101a5_idx'),
        ),
        migrations.AddIndex(
            model_name='edition',
            index=models.Index(fields=['publication_date'], name='library_edi_publica_953051_idx'),
        ),
        migrations.AddIndex(
            model_name='edition',
            index=models.Index(condition=models.Q(('is_available', True)), fields=['is_available'], name='available_editions_idx'),
        ),
        migrations.AddIndex(
            model_name='edition',
            index=models.Index(condition=models.Q(('is_primary', True)), fields=['is_primary'], name='primary_editions_idx'),
        ),
        migrations.AddIndex(
            model_name='edition',
            index=models.Index(fields=['edition_language'], name='library_edi_edition_0e6866_idx'),
        ),
        migrations.AddIndex(
            model_name='edition',
            index=models.Index(fields=['file_format'], name='library_edi_file_fo_dfcb74_idx'),
        ),
        migrations.AddIndex(
            model_name='edition',
            index=models.Index(fields=['edition_type'], name='library_edi_edition_04c7aa_idx'),
        ),
        migrations.AddConstraint(
            model_name='edition',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('book',), name='one_primary_edition_per_book'),
        ),
    ]
