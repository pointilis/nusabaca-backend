# Generated by Django 5.2.6 on 2025-09-20 17:46

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=500)),
                ('original_title', models.CharField(blank=True, help_text='Original title if translated', max_length=500)),
                ('description', models.TextField(blank=True)),
                ('original_publication_date', models.DateField(blank=True, help_text='First publication date of the work', null=True)),
                ('language', models.CharField(default='en', help_text='Original language', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
            options={
                'db_table': 'library_books',
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('bio', models.TextField(blank=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
            options={
                'db_table': 'library_authors',
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='library_aut_search__22eba9_gin')],
            },
        ),
        migrations.CreateModel(
            name='BookAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('author', 'Author'), ('co-author', 'Co-Author'), ('editor', 'Editor'), ('translator', 'Translator')], default='author', max_length=50)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.author')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
            ],
            options={
                'db_table': 'library_book_authors',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='authors',
            field=models.ManyToManyField(related_name='books', through='library.BookAuthor', to='library.author'),
        ),
        migrations.CreateModel(
            name='BookEdition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('edition_title', models.CharField(blank=True, help_text='Edition-specific title if different', max_length=500)),
                ('edition_number', models.CharField(blank=True, help_text="e.g., '2nd Edition', 'Revised'", max_length=50)),
                ('edition_type', models.CharField(choices=[('first', 'First Edition'), ('revised', 'Revised Edition'), ('reprint', 'Reprint'), ('anniversary', 'Anniversary Edition'), ('special', 'Special Edition'), ('international', 'International Edition'), ('translation', 'Translation'), ('abridged', 'Abridged Edition'), ('unabridged', 'Unabridged Edition'), ('illustrated', 'Illustrated Edition'), ('other', 'Other')], default='other', max_length=20)),
                ('isbn', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('isbn13', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('edition_language', models.CharField(blank=True, help_text='Language of this edition', max_length=10)),
                ('total_pages', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('file_path', models.CharField(blank=True, max_length=1000)),
                ('file_format', models.CharField(blank=True, choices=[('PDF', 'PDF'), ('EPUB', 'EPUB'), ('MOBI', 'MOBI'), ('TXT', 'Text'), ('HTML', 'HTML'), ('AUDIOBOOK', 'Audiobook'), ('HARDCOVER', 'Hardcover'), ('PAPERBACK', 'Paperback')], max_length=20)),
                ('file_size_mb', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cover_image_url', models.URLField(blank=True)),
                ('is_available', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=False, help_text='Primary edition to display for this book')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, help_text='Edition-specific notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editions', to='library.book')),
                ('editor', models.ManyToManyField(blank=True, related_name='edited_editions', to='library.author')),
                ('illustrator', models.ManyToManyField(blank=True, related_name='illustrated_editions', to='library.author')),
                ('translator', models.ManyToManyField(blank=True, related_name='translated_editions', to='library.author')),
            ],
            options={
                'db_table': 'library_book_editions',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent_genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subgenres', to='library.genre')),
            ],
            options={
                'db_table': 'library_genres',
            },
        ),
        migrations.CreateModel(
            name='BookGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.book')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.genre')),
            ],
            options={
                'db_table': 'library_book_genres',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='genres',
            field=models.ManyToManyField(related_name='books', through='library.BookGenre', to='library.genre'),
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('address', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'library_publishers',
                'indexes': [models.Index(fields=['name'], name='library_pub_name_963899_idx')],
            },
        ),
        migrations.CreateModel(
            name='BookPublisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.bookedition')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.publisher')),
            ],
            options={
                'db_table': 'library_book_publishers',
            },
        ),
        migrations.AddField(
            model_name='bookedition',
            name='publishers',
            field=models.ManyToManyField(related_name='editions', through='library.BookPublisher', to='library.publisher'),
        ),
        migrations.AddIndex(
            model_name='bookauthor',
            index=models.Index(fields=['book'], name='library_boo_book_id_f4218d_idx'),
        ),
        migrations.AddIndex(
            model_name='bookauthor',
            index=models.Index(fields=['author'], name='library_boo_author__8022d5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bookauthor',
            unique_together={('book', 'author', 'role')},
        ),
        migrations.AddIndex(
            model_name='bookgenre',
            index=models.Index(fields=['book'], name='library_boo_book_id_0383a9_idx'),
        ),
        migrations.AddIndex(
            model_name='bookgenre',
            index=models.Index(fields=['genre'], name='library_boo_genre_i_4bff58_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bookgenre',
            unique_together={('book', 'genre')},
        ),
        migrations.AddIndex(
            model_name='book',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='library_boo_search__a7007a_gin'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['original_publication_date'], name='library_boo_origina_9abd1d_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['language'], name='library_boo_languag_fe6d89_idx'),
        ),
        migrations.AddIndex(
            model_name='bookpublisher',
            index=models.Index(fields=['book_edition'], name='library_boo_book_ed_db1896_idx'),
        ),
        migrations.AddIndex(
            model_name='bookpublisher',
            index=models.Index(fields=['publisher'], name='library_boo_publish_eaed17_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bookpublisher',
            unique_together={('book_edition', 'publisher')},
        ),
        migrations.AddIndex(
            model_name='bookedition',
            index=models.Index(fields=['book'], name='library_boo_book_id_6199d9_idx'),
        ),
        migrations.AddIndex(
            model_name='bookedition',
            index=models.Index(fields=['isbn'], name='library_boo_isbn_e3accf_idx'),
        ),
        migrations.AddIndex(
            model_name='bookedition',
            index=models.Index(fields=['isbn13'], name='library_boo_isbn13_1433a7_idx'),
        ),
        migrations.AddIndex(
            model_name='bookedition',
            index=models.Index(fields=['publication_date'], name='library_boo_publica_4db6ca_idx'),
        ),
        migrations.AddIndex(
            model_name='bookedition',
            index=models.Index(condition=models.Q(('is_available', True)), fields=['is_available'], name='available_editions_idx'),
        ),
        migrations.AddIndex(
            model_name='bookedition',
            index=models.Index(condition=models.Q(('is_primary', True)), fields=['is_primary'], name='primary_editions_idx'),
        ),
        migrations.AddIndex(
            model_name='bookedition',
            index=models.Index(fields=['edition_language'], name='library_boo_edition_c48d64_idx'),
        ),
        migrations.AddIndex(
            model_name='bookedition',
            index=models.Index(fields=['file_format'], name='library_boo_file_fo_1c7f59_idx'),
        ),
        migrations.AddIndex(
            model_name='bookedition',
            index=models.Index(fields=['edition_type'], name='library_boo_edition_d2df3c_idx'),
        ),
        migrations.AddConstraint(
            model_name='bookedition',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('book',), name='one_primary_edition_per_book'),
        ),
    ]
